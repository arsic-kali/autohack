#!/bin/bash
# COLORS
RED='\033[0;31m'
NC='\033[0m' # No Color
GREEN='\033[1;32m'
YLLW='\033[1;33m'
DG='\033[0;37m'
LR='\033[0;31m' 
# END COLORS

case $1 in
    enum)
        printf "${YLLW}[*] Performing Enumeration Scan ...${NC}\n"
	out=$(nmap $2)
	echo "$out"
	printf "${YLLW}\n[+] Enter Port #'s to scan further (EG: 80,22,8080): ${NC}\n"
	read ports
	printf "${YLLW}\n[*] Performing Detailed Scan ... ${NC}\n"
	nmap -sV -sC -O -T4 -p$ports $2
        ;;
    dirb)
        gnome-terminal -- bash -c "dirb $2; exec bash"
	;;
    help)
        printf "
ah ${GREEN}<flag> ${YLLW}<argument>${NC}\n
${GREEN}enum ${YLLW}<host ip>${NC} - Perform basic enumeration of a host using nmap. After an initial and basic port scan, the script will ask you to enter any ports you wish to scan in more detail.\n
${GREEN}smb ${YLLW}<host ip>${NC} - Performs SMB enumeration against a target using CrackMapExec and enum4linux. Two windows will be populated utilizing these tools.\n
${GREEN}sqli ${YLLW}<http post request file(usually from burp)>${NC} - Takes an HTTP Post Request as input and tests any and all parameters against sqlmap to find any potential injection points.\n
${GREEN}hashID ${YLLW}<file containing hash(es)>${NC} - Takes a file containing hash(es) and uses NameThatHash to identify the hash type."
        ;;
    smb)
	printf "${YLLW}[*] Performing SMB Enumeration utilizing CME and enum4linux ...${NC}\n"
	#read -p "[+] Enter the IP to scan: " -r ip
	gnome-terminal -- bash -c "crackmapexec smb $2; exec bash"
	gnome-terminal -- bash -c "enum4linux $2; exec bash"
	;;
    sqli)
	gnome-terminal -- bash -c "sqlmap -r $2 --batch; exec bash"
	;;
    hashID)
        gnome-terminal -- bash -c "nth -f $2; exec bash"
	;;
    *)
	echo "Unknown argument(s): $@"
	printf "ah help for more info on how to use AutoHack CLI."
        ;;
esac

