#!/bin/bash
if [ $EUID != 0 ]
then
	printf "Needs to be run as root/sudo user.\n"
	exit 1;
fi

#COLORS
RED='\033[0;31m'
NC='\033[0m' #No color
GREEN='\033[1;32m'
YLLW='\033[1;33m'
DG='\033[0;37m'
LR='\033[0;31m'
patch=5.01
#END COLORS

nmapipscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./nmapipscan
	cd ../..
}
nmapudpscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./nmapudpscan
	cd ../..
}
niktowebscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./niktowebscan
	cd ../..
}
netscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./netscan
	cd ../..
}
sniffer(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./sniffer
	cd ../..
}
wifiscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./wifiscan
	cd ../..
}
managedmode(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./managedmode
	cd ../..
}
usrmsg(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/other
	./usrmsg
	cd ../..
}
update(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/other
	./update
	cd ../..
}
updater(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/other
	./updater
	cd ../..
}
arpscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./arpscan
	cd ../..
}

credits(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/other
	./credits_msg
	cd ../..
}
kaliupgrade_update(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/other
	./kaliupgrade_update
	cd ../..
}
searchsploit(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./searchsploit
	cd ../..
}
smbclient(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/exploitation
	./smbclient
	cd ../..
}
gobuster(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./gobuster
	cd ../..
}
deauth(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/exploitation
	./deauth
	cd ../..
}
massdeauth(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/exploitation
	./massdeauth
	cd ../..

}
monitormode(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./monitormode
	cd ../..
}
macspoof(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/anonymity
	./macspoof
	cd ../..
}
smbsigning(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./smbsigning
	cd ../..
}
autorecon(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./autorecon
	cd ../..
}
wpscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./wpscan
	cd ../..
	printf "Enter Target URL ---> "
	read targurl
	printf "Would you like to save the output to a new text file?(y/n)"
	read choice
	if [ $choice == y ]
	then
		printf "Name for output file: "
		read outputfile
		gnome-terminal --command="bash -c 'wpscan --url $targurl -o $outputfile; $SHELL'"
	else
		gnome-terminal --command="bash -c 'wpscan --url $targurl --enumerate u,ap,tt,t; $SHELL'"
	fi
}
masscan(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./masscan
	cd ../..
}
dependencies_installer(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/other/dependencies
	./masterInstaller
	cd ../../..
}
scouter(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./scouter
	cd ../..
}
ferox(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	./ferox
	cd ../..
}
portforward(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/wifi_tools
	./portforward
	cd ../..
}
scillaDirEnum(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	gnome-terminal --command="bash -c './scillaDir; $SHELL'"
	cd ../..
}
scillaPortScanner(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	gnome-terminal --command="bash -c './scillaPortScan; $SHELL'"
	cd ../..
}
allInOnePortScanner(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	gnome-terminal --command="bash -c './autohackHeader; ./masscan; $SHELL'"
	sleep 1
	gnome-terminal --command="bash -c './autohackHeader;./nmapudpscan; $SHELL'"
	sleep 1
	gnome-terminal --command="bash -c './autohackHeader;./autorecon; $SHELL'"
	sleep 1
	gnome-terminal --command="bash -c './autohackHeader;./scillaPortScan; $SHELL'" 
	cd ../..
}
allInOneWebScanner(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/scanning_enumeration
	gnome-terminal --command="bash -c './autohackHeader;./niktowebscan; $SHELL'"
	sleep 1
	gnome-terminal --command="bash -c './autohackHeader;./gobuster; $SHELL'"
	sleep 1
	gnome-terminal --command="bash -c './autohackHeader;./ferox; $SHELL'"
	sleep 1
	gnome-terminal --command="bash -c './autohackHeader;./scillaDir; $SHELL'" 
}
SET(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/exploitation
	./SET
	cd ../..
}
reverseShellGen(){
	whereah=`which autohack`; cd ${whereah::-8}; cd scripts/exploitation
	gnome-terminal --command="bash -c './autohackHeader;./reverseShellGen; $SHELL'"
	cd ../..
}
autohackHeader(){
	printf "${RED}
 █████╗ ██╗   ██╗████████╗ ██████╗ 	██╗  ██╗ █████╗  ██████╗██╗  ██╗    
██╔══██╗██║   ██║╚══██╔══╝██╔═══██╗	██║  ██║██╔══██╗██╔════╝██║ ██╔╝   
███████║██║   ██║   ██║   ██║   ██║	███████║███████║██║     █████╔╝    
██╔══██║██║   ██║   ██║   ██║   ██║	██╔══██║██╔══██║██║     ██╔═██╗    
██║  ██║╚██████╔╝   ██║   ╚██████╔╝	██║  ██║██║  ██║╚██████╗██║  ██╗  
╚═╝  ╚═╝ ╚═════╝    ╚═╝    ╚═════╝ 	╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ 
				 v$patch 
	${NC}"
}

#-----------------------------------------------------------------------------------------------------
exploitation(){

autohackHeader

	#OPTIONS START
	printf "${YLLW} 
------------------------------------------------------------------------------- 
                       💀 Exploitation 💀                                      |                                                 
------------------------------------------------------------------------------- 
1)  Use SMBClient (smbclient)            |                                     | 
2)  Single Deauth Attack (Aircrack)      |                    	               | 
3)  Mass Deuath Attack (MDK3)	         |				       | 
4)  Launch SET (Social Engineer Toolkit) |                                     | 
5)  Reverse Shell Generator              |                                     |
                                         |                                     |                
           MORE SOON!                    |            MORE SOON!               |                
                                         |                                     |                
------------------------------------------------------------------------------- 
Type 'back' to go return to the main menu 
Type 'exit' to quit the program  
${DG}  
Hacking made simple. 

 ̿̿ ̿̿ ̿'̿'\̵͇\з= ( ▀ ͜͞ʖ▀) =ε/̵͇/’̿’̿ ̿ ̿̿ ̿̿ ̿̿ 

${NC}"
#OPTIONS END
printf "${LR}AutoHack${NC}${YLLW} |${NC}${DG} root💀kali ${YLLW}--> "
read choice
	
	if [ $choice == 1 ]
	then
	        smbclient
	     
	elif [ $choice == 2 ]
	then
		deauth
	
	elif [ $choice == 3 ]
	then
		massdeauth
	
	elif [ $choice == 4 ]
	then
		SET

	elif [ $choice == 5  ]
	then
		reverseShellGen
	
	elif [ $choice == 'back' ]
	then
		continue
		clear
	
	elif [ $choice == 'exit' ]
	then
		exit
	
	
	else
		clear
		echo You did not select a valid option.
		exploitation
	
	fi
}
scan_enum(){

autohackHeader

#OPTIONS START
printf "${YLLW}
-------------------------------------------------------------------------------
				Scanning/Enumeration                           |                                                
-------------------------------------------------------------------------------
1)  Nikto Web Scan (Nikto)               | 11) All in one Scan (6,2,2b,10)     |
2)  NMAP Scan (NMAP)                     | 12) All in one Web Scan (1,3,8,9)   |
2a) NMAP UDP Scan (NMAP)	         |				       |
2b) Masscan All Ports (masscan)          |                                     |
3)  Gobuster Dir Scan (Gobuster)	 |                                     |
4)  Launch Searchsploit (searchsploit)   |				       |
5)  SMB Signing checker (NMAP script)    |				       |
6)  AutoRecon Scan a Target (AutoRecon)  |                                     |
7)  WPscan a WordPress Site (WPscan)     |                                     |
8)  Feroxbuster Dir Scan (Feroxbuster)   |                                     |
9)  Scilla Dir Enumeration (Scilla)      |                                     |
10) Scilla Port Scan (Scilla)            |                                     |
					 |                                     |                
					 |            MORE SOON!               |                
					 |                                     |                
-------------------------------------------------------------------------------
Type 'back' to go return to the main menu
Type 'exit' to quit the program 
${DG}
Hacking made simple.

 ̿̿ ̿̿ ̿'̿'\̵͇\з= ( ▀ ͜͞ʖ▀) =ε/̵͇/’̿’̿ ̿ ̿̿ ̿̿ ̿̿
	 
${NC}"
#OPTIONS END
printf "${LR}AutoHack${NC}${YLLW} |${NC}${DG} root💀kali ${YLLW}--> "
read choice

if [ $choice == 1 ]
then
        niktowebscan

elif [ $choice == 2 ]
then
        nmapipscan

elif [ $choice == '2a' ]
then
        nmapudpscan
elif [ $choice == '2b' ]
then
        masscan
elif [ $choice == 3 ]
then
	gobuster
elif [ $choice == 4 ]
then
	searchsploit
	
elif [ $choice == 5 ]
then
	smbsigning

elif [ $choice == 6 ]
then
	autorecon

elif [ $choice == 7 ]
then
	wpscan
	
elif [ $choice == 8 ]
then
	ferox

elif [ $choice == 9 ]
then
	scillaDirEnum
	
elif [ $choice == 10 ]
then
	scillaPortScanner

elif [ $choice == 11 ]
then
	allInOnePortScanner

elif [ $choice == 12 ]
then
	allInOneWebScanner
	
elif [ $choice == 'back' ]
then
	continue
	clear

elif [ $choice == 'exit' ]
then
	exit


else
	clear
	echo You did not select a valid option.
	scan_enum

fi
}


wifi_exploit(){
 
autohackHeader

	#OPTIONS START
printf "${YLLW}
-------------------------------------------------------------------------------
					WiFi                                   |                
-------------------------------------------------------------------------------
1)  Scan for Hosts (Aircrack)            |                                     |
1a) Scan for Hosts #2 (Arp)              |				       |
2)  Scan for WiFi		         |                                     |
3)  Packet Sniffer (Aircrack)            |                                     |
4)  Scout a network for hosts (Aircrack) |				       |
5)  Wifi Card --> Monitor Mode	         |         MORE SOON!                  |                                        
6)  WiFi Card --> Managed Mode           |                                     |
7)  Enable Port Forwarding               |                                     |
					 |                                     |
					 |                                     |
-------------------------------------------------------------------------------
Type 'back' to return to the main menu
Type 'exit' to quit the program 
${DG}
Hacking made simple.

'̿'\̵͇\з= ( ▀ ͜͞ʖ▀) =ε/̵͇/’̿’̿ ̿ ̿̿ ̿̿ ̿̿
	 
	${NC}"
	#OPTIONS END
	printf "${LR}AutoHack${NC}${YLLW} |${NC}${DG} root💀kali ${YLLW}--> "
	read choice
	if [ $choice == 1 ]
	then
			netscan

	elif [ $choice == '1a' ]
	then
			arpscan

	elif [ $choice == 2 ]
	then
			wifiscan


	elif [ $choice == 3 ]
	then
			sniffer
			
	elif [ $choice == 4 ]
	then
			scouter
			
			
	elif [ $choice == 5 ]
	then
			monitormode
			
	elif [ $choice == 6 ]
	then
			managedmode

	elif [ $choice == 7 ]
	then
			portforward

	elif [ $choice == 'back' ]
	then
		continue
		clear

	elif [ $choice == 'exit' ]
	then
		exit

	else
		clear
		echo You did not select a valid option.
		wifi_exploit
	fi
}

options(){

	autohackHeader

	#OPTIONS START
	printf "${YLLW}
-------------------------------------------------------------------------------
	                               Other                                   |                
-------------------------------------------------------------------------------
1) Check for Updates                                                           |
2) Update & Upgrade your Kali OS                                               |
3) Message to users                                                            |                                        
4) Credits                                                                     |
									       |
				           				       |
-------------------------------------------------------------------------------
Type 'back' to return to the main menu
Type 'exit' to quit the program 
${DG}
Hacking made simple.

 '̿'\̵͇\з= ( ▀ ͜͞ʖ▀) =ε/̵͇/’̿’̿ ̿ ̿̿ ̿̿ ̿̿
	 
${NC}"
#OPTIONS END
	printf "${LR}AutoHack${NC}${YLLW} |${NC}${DG} root💀kali ${YLLW}--> "
	read choice
	if [ $choice == 1 ]
	then
			update

	elif [ $choice == 2 ]
	then
			kaliupgrade_update
	elif [ $choice == 3 ]
	then
			usrmsg

	elif [ $choice == 4 ]
	then
			credits

	elif [ $choice == 'back' ]
	then
		continue
		clear

	elif [ $choice == 'exit' ]
	then
			exit

	else
		clear
			echo You did not select a valid option.
			options
	fi

}
anonymity(){

	autohackHeader

	#OPTIONS START
printf "${YLLW}
-------------------------------------------------------------------------------
				       Anonymity                               |                
-------------------------------------------------------------------------------
1) Spoof your MAC Address                                                      |
									       |
									       |                                        
									       |
									       |
									       |
-------------------------------------------------------------------------------
Type 'back' to return to the main menu
Type 'exit' to quit the program 
${DG}
Hacking made simple.

'̿'\̵͇\з= ( ▀ ͜͞ʖ▀) =ε/̵͇/’̿’̿ ̿ ̿̿ ̿̿ ̿̿
	 
${NC}"
	#OPTIONS END
	printf "${LR}AutoHack${NC}${YLLW} |${NC}${DG} root💀kali ${YLLW}--> "
	read choice
	if [ $choice == 1 ]
	then
			macspoof
			
	elif [ $choice == 'back' ]
	then
		continue
		clear

	elif [ $choice == 'exit' ]
	then
			exit

	else
		clear
			echo You did not select a valid option.
			options
	fi

}



cli(){

autohackHeader

	#OPTIONS START
printf "${YLLW}
-------------------------------------------------------------------------------
				   Menu 	                               |						
-------------------------------------------------------------------------------
1)  Scanning & Enumeration tools                                               |                                     
2)  WiFi tools								       |
3)  Exploitation                                                               |
4)  Anonymity                                                                  |                                     
5)  Other                                                                      |
6)  Install Dependencies                                                       |
                                                                               |
				                                               |                                 
-------------------------------------------------------------------------------
Type 'exit' to quit the program 
${DG}
Hacking made simple.

'̿'\̵͇̿̿\з= ( ▀ ͜͞ʖ▀) =ε/̵͇̿̿/’̿’̿ ̿ ̿̿ ̿̿ ̿̿
	 
${NC}"
	#OPTIONS END
	printf "${LR}AutoHack${NC}${YLLW} |${NC}${DG} root💀kali ${YLLW}--> "
	read choice
	if [ $choice == 1 ]  
	then
		clear
		scan_enum

	elif [ $choice == 2 ] 
	then
		clear
		wifi_exploit

	elif [ $choice == 3 ] 
	then
		clear
		exploitation
	elif [ $choice == 4 ] 
	then
		clear
		anonymity

	elif [ $choice == 5 ] 
	then
		clear
		options
		
	elif [ $choice == 6 ] 
	then
		clear
		dependencies_installer


	elif [ $choice == 'exit' ]
	then
		exit

	else
		clear
		echo You did not select a valid option.
		cli
	fi
	cli
}

cli

exit 0;
